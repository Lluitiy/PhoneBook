{"version":3,"file":"static/js/14.2f27c0c9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Spinner/Spinner.jsx","Redux/Contacts/ContactsSelectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactsForm = styled(Form)`\n\twidth: 500px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 15px;\n\tmargin: 0px auto;\n\tpadding: 64px 16px;\n\tbackground-color: rgba(255, 255, 255, 0.5);\n\tborder-radius: 25px;\n`;\n\nexport const ContactsFormInput = styled(Field)`\n\tbackground-color: #f6f6f6;\n\tborder: none;\n\tcolor: #131a35;\n\tpadding: 15px 60px 15px 15px;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tfont-size: 18px;\n\t-webkit-box-shadow: 0 10px 30px 0 rgba(95, 186, 233, 0.4);\n\tbox-shadow: 0 10px 30px 0 rgba(95, 186, 233, 0.4);\n\t-webkit-border-radius: 5px 5px 5px 5px;\n\tborder-radius: 5px 5px 5px 5px;\n\tborder-bottom: 2px solid transparent;\n\n\t-webkit-transition: all 250ms ease-in-out;\n\t-moz-transition: all 250ms ease-in-out;\n\t-ms-transition: all 250ms ease-in-out;\n\t-o-transition: all 250ms ease-in-out;\n\ttransition: all 250ms ease-in-out;\n\n\t:hover,\n\t:focus {\n\t\toutline: none;\n\t\tborder-bottom: 2px solid #5fbae9;\n\t\tbackground-color: #f6f6f6;\n\t}\n\t:active {\n\t\tborder-bottom: 2px solid #5fbae9;\n\t\t-moz-transform: scale(0.95);\n\t\t-webkit-transform: scale(0.95);\n\t\t-o-transform: scale(0.95);\n\t\t-ms-transform: scale(0.95);\n\t\ttransform: scale(0.95);\n\t}\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n\tcolor: #131a35;\n\tfont-weight: 500;\n\tfont-size: 18px;\n`;\n\nexport const ContactsFormLabel = styled.label`\n\twidth: 300px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-around;\n\tcolor: #131a35;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\ttransition: 250ms color ease-in-out;\n\t:hover,\n\t:focus {\n\t\tcolor: #0367a6;\n\t}\n`;\n\nexport const ContactsBtn = styled.button`\n\tpadding: 10px;\n\tcolor: #0367a6;\n\tbackground-color: #131a35;\n\toutline: none;\n\tborder-radius: 8px;\n\tborder: none;\n\ttransition: color 250ms ease-in-out, background-color 250ms ease-in-out;\n\tcursor: pointer;\n\t:hover,\n\t:focus {\n\t\tcolor: #131a35;\n\t\tbackground-color: #0367a6;\n\t}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Formik } from 'formik';\nimport {\n\tContactsForm,\n\tContactsFormInput,\n\tContactsFormLabel,\n\tErrorMsg,\n} from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { addContacts } from 'Redux/Contacts/ContactsOperations';\nimport { CommonBtn, CommonHeading } from 'components/App/App.styled';\n\nconst schema = yup.object().shape({\n\tname: yup\n\t\t.string()\n\t\t.min(1, 'min: 1 max: 20')\n\t\t.max(20, 'min: 1 max: 20')\n\t\t.required('Please fill the field'),\n\tnumber: yup\n\t\t.string()\n\t\t.min(8, 'min: 8 max: 10')\n\t\t.max(10, 'min: 8 max: 10')\n\t\t.required('Please fill the field'),\n});\n\nexport const ContactForm = () => {\n\tconst addedContact = useSelector(state => state.contacts.contacts);\n\tconst dispatch = useDispatch();\n\tif (addedContact.error) {\n\t\talert('Ваш комп взломан переведите 10000$ на карту 7892 4552 1124 0228');\n\t}\n\n\tconst initialValues = {\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\tconst findContact = name => {\n\t\treturn addedContact.items?.find(contact => {\n\t\t\treturn contact.name.toLowerCase() === name.toLowerCase();\n\t\t});\n\t};\n\n\tconst handleFormSubmit = (values, { resetForm }) => {\n\t\tif (findContact(values.name)) {\n\t\t\tReport.failure(\n\t\t\t\t'This contact already existst',\n\t\t\t\t'Please make sure you are adding the new contact',\n\t\t\t\t'Ckeck again'\n\t\t\t);\n\t\t\tresetForm();\n\t\t\treturn;\n\t\t}\n\t\tconst newContact = {\n\t\t\tname: values.name,\n\t\t\tnumber: values.number,\n\t\t};\n\t\tdispatch(addContacts(newContact));\n\t\tresetForm();\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tonSubmit={handleFormSubmit}\n\t\t\tvalidationSchema={schema}\n\t\t>\n\t\t\t<ContactsForm>\n\t\t\t\t<CommonHeading>Phone Book</CommonHeading>\n\t\t\t\t<ContactsFormLabel>\n\t\t\t\t\t<ContactsFormInput type=\"text\" name=\"name\" placeholder=\"Name\" />\n\t\t\t\t</ContactsFormLabel>\n\t\t\t\t<ErrorMsg name=\"name\" component=\"div\" />\n\t\t\t\t<ContactsFormLabel>\n\t\t\t\t\t<ContactsFormInput type=\"tel\" name=\"number\" placeholder=\"Number\" />\n\t\t\t\t</ContactsFormLabel>\n\t\t\t\t<ErrorMsg name=\"number\" component=\"div\" />\n\t\t\t\t<CommonBtn type=\"submit\" disabled={addedContact.isLoading}>\n\t\t\t\t\t{addedContact.isLoading ? 'Please Wait' : 'Add contact'}\n\t\t\t\t</CommonBtn>\n\t\t\t</ContactsForm>\n\t\t</Formik>\n\t);\n};\n","import { Container, Section } from 'components/App/App.styled';\n\nconst Spinner = () => {\n\treturn (\n\t\t<Section>\n\t\t\t<Container>\n\t\t\t\t<div className=\"ring\">\n\t\t\t\t\tLoading\n\t\t\t\t\t<span className=\"spann\"></span>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</Section>\n\t);\n};\n\nexport default Spinner;\n","const getIsLoading = state => state.contacts.contacts.isLoading;\nconst getStates = state => state.contacts;\n\nexport const ContactSelectors = {\n\tgetIsLoading,\n\tgetStates,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 16px;\n\talign-items: center;\n\n\tlist-style-type: none;\n\tpadding: 0px 10px;\n\tmargin: 0px auto;\n\twidth: 700px;\n`;\n\nexport const ContactListItem = styled.li`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n`;\nexport const ContactsWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tpadding: 0.9rem 2rem;\n\tfont-size: 0.8rem;\n\tborder-radius: 20px;\n\tborder-bottom: 2px solid #008997;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n\n\twidth: 300px;\n`;\nexport const ContactListName = styled.p`\n\twidth: 35%;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tcolor: #131a35;\n`;\n\nexport const ContactListNumber = styled.p`\n\twidth: 35%;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tcolor: #131a35;\n`;\n\nexport const Message = styled.h2`\n\ttext-align: center;\n\tpadding: 2rem 4rem;\n\tborder-radius: 20px;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n`;\n","// import { Spinner } from 'components/Spinner/Spinner';\nimport { CommonBtn, Container, Section } from 'components/App/App.styled';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'Redux/Contacts/ContactsOperations';\nimport { ContactSelectors } from 'Redux/Contacts/ContactsSelectors';\nimport {\n\tContactListList,\n\tContactListItem,\n\tContactsWrapper,\n\tContactListName,\n\tContactListNumber,\n\tMessage,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n\tconst { contacts, filter } = useSelector(ContactSelectors.getStates);\n\n\tconst dispatch = useDispatch();\n\n\tconst filteredContacts = filter\n\t\t? contacts.items.filter(contact =>\n\t\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t\t  )\n\t\t: contacts.items;\n\treturn (\n\t\t<Section>\n\t\t\t<Container>\n\t\t\t\t{contacts.isLoading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : (\n\t\t\t\t\t<ContactListList>\n\t\t\t\t\t\t{filteredContacts?.length ? (\n\t\t\t\t\t\t\tfilteredContacts.map(({ id, name, number }) => (\n\t\t\t\t\t\t\t\t<ContactListItem key={id} id={id}>\n\t\t\t\t\t\t\t\t\t<ContactsWrapper>\n\t\t\t\t\t\t\t\t\t\t<ContactListName>{name}</ContactListName>\n\t\t\t\t\t\t\t\t\t\t<ContactListNumber>{number}</ContactListNumber>\n\t\t\t\t\t\t\t\t\t</ContactsWrapper>\n\t\t\t\t\t\t\t\t\t<CommonBtn\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteContacts(id))}\n\t\t\t\t\t\t\t\t\t\tdisabled={contacts.isLoading}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t</CommonBtn>\n\t\t\t\t\t\t\t\t</ContactListItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Message> You dont have contacts yet</Message>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ContactListList>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Section>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n\twidth: 500px;\n\tpadding: 64px 16px;\n\tbackground-color: rgba(255, 255, 255, 0.5);\n\tmargin: 0px auto;\n\tborder-radius: 20px;\n`;\n","import {\n\tCommonHeading,\n\tCommonInput,\n\tCommonLabel,\n\tContainer,\n\tSection,\n} from 'components/App/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'Redux/Contacts/ContactsSlice';\nimport { FilterWrapper } from './Filter.styled';\nexport const Filter = () => {\n\tconst dispatch = useDispatch();\n\tconst contactToFind = useSelector(state => state.filter);\n\tconst filter = name => dispatch(filterContacts(name));\n\treturn (\n\t\t<Section>\n\t\t\t<Container>\n\t\t\t\t<FilterWrapper>\n\t\t\t\t\t<CommonHeading>Contacts</CommonHeading>\n\t\t\t\t\t<CommonLabel>\n\t\t\t\t\t\tFind contacts by Name\n\t\t\t\t\t\t<CommonInput\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={contactToFind}\n\t\t\t\t\t\t\tonChange={e => filter(e.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"Enter the Name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CommonLabel>\n\t\t\t\t</FilterWrapper>\n\t\t\t</Container>\n\t\t</Section>\n\t);\n};\n","import { Container, Section } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'Redux/Contacts/ContactsOperations';\nimport { ContactSelectors } from 'Redux/Contacts/ContactsSelectors';\n\nconst ContactactsPage = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(getContacts());\n\t}, [dispatch]);\n\tconst isLoading = useSelector(ContactSelectors.getIsLoading);\n\tconsole.log('isLoading', isLoading);\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<Section>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<ContactForm />\n\t\t\t\t\t\t<Filter />\n\t\t\t\t\t\t<ContactList />\n\t\t\t\t\t</Container>\n\t\t\t\t</Section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ContactactsPage;\n"],"names":["ContactsForm","styled","Form","ContactsFormInput","Field","ErrorMsg","ErrorMessage","ContactsFormLabel","schema","yup","shape","name","min","max","required","number","ContactForm","addedContact","useSelector","state","contacts","dispatch","useDispatch","error","alert","initialValues","onSubmit","values","resetForm","items","find","contact","toLowerCase","findContact","Report","newContact","addContacts","validationSchema","type","placeholder","component","disabled","isLoading","className","ContactSelectors","ContactListList","ContactListItem","ContactsWrapper","ContactListName","ContactListNumber","Message","ContactList","filter","filteredContacts","includes","length","map","id","onClick","deleteContacts","FilterWrapper","Filter","contactToFind","value","onChange","e","target","filterContacts","useEffect","getContacts","console","log"],"sourceRoot":""}