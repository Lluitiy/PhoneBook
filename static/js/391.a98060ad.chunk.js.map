{"version":3,"file":"static/js/391.a98060ad.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Services/Icons/Icons.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Spinner/Spinner.jsx","Redux/Contacts/ContactsSelectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactsForm = styled(Form)`\n\twidth: 500px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 15px;\n\tmargin: 0px auto;\n\tpadding: 64px 16px;\n\tbackground-color: rgba(255, 255, 255, 0.5);\n\tborder-radius: 25px;\n`;\n\nexport const ContactsFormInput = styled(Field)`\n\tbackground-color: #f6f6f6;\n\tborder: none;\n\tcolor: #131a35;\n\tpadding: 15px 60px 15px 15px;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tfont-size: 18px;\n\t-webkit-box-shadow: 0 10px 30px 0 rgba(95, 186, 233, 0.4);\n\tbox-shadow: 0 10px 30px 0 rgba(95, 186, 233, 0.4);\n\t-webkit-border-radius: 5px 5px 5px 5px;\n\tborder-radius: 5px 5px 5px 5px;\n\tborder-bottom: 2px solid transparent;\n\n\t-webkit-transition: all 250ms ease-in-out;\n\t-moz-transition: all 250ms ease-in-out;\n\t-ms-transition: all 250ms ease-in-out;\n\t-o-transition: all 250ms ease-in-out;\n\ttransition: all 250ms ease-in-out;\n\n\t:hover,\n\t:focus {\n\t\toutline: none;\n\t\tborder-bottom: 2px solid #5fbae9;\n\t\tbackground-color: #f6f6f6;\n\t}\n\t:active {\n\t\tborder-bottom: 2px solid #5fbae9;\n\t\t-moz-transform: scale(0.95);\n\t\t-webkit-transform: scale(0.95);\n\t\t-o-transform: scale(0.95);\n\t\t-ms-transform: scale(0.95);\n\t\ttransform: scale(0.95);\n\t}\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n\tcolor: #131a35;\n\tfont-weight: 500;\n\tfont-size: 18px;\n`;\n\nexport const ContactsFormLabel = styled.label`\n\twidth: 300px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-around;\n\tcolor: #131a35;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\ttransition: 250ms color ease-in-out;\n\t:hover,\n\t:focus {\n\t\tcolor: #0367a6;\n\t}\n`;\n\nexport const ContactsBtn = styled.button`\n\tpadding: 10px;\n\tcolor: #0367a6;\n\tbackground-color: #131a35;\n\toutline: none;\n\tborder-radius: 8px;\n\tborder: none;\n\ttransition: color 250ms ease-in-out, background-color 250ms ease-in-out;\n\tcursor: pointer;\n\t:hover,\n\t:focus {\n\t\tcolor: #131a35;\n\t\tbackground-color: #0367a6;\n\t}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Formik } from 'formik';\nimport {\n\tContactsForm,\n\tContactsFormInput,\n\tContactsFormLabel,\n\tErrorMsg,\n} from './ContactForm.styled';\nimport * as yup from 'yup';\nimport { addContacts } from 'Redux/Contacts/ContactsOperations';\nimport { CommonBtn, CommonHeading } from 'components/App/App.styled';\n\nconst schema = yup.object().shape({\n\tname: yup\n\t\t.string()\n\t\t.min(1, 'min: 1 max: 20')\n\t\t.max(20, 'min: 1 max: 20')\n\t\t.required('Please fill the field'),\n\tnumber: yup\n\t\t.string()\n\t\t.min(8, 'min: 8 max: 10')\n\t\t.max(10, 'min: 8 max: 10')\n\t\t.required('Please fill the field'),\n});\n\nexport const ContactForm = () => {\n\tconst addedContact = useSelector(state => state.contacts.contacts);\n\tconst dispatch = useDispatch();\n\tif (addedContact.error) {\n\t\talert('Ваш комп взломан переведите 10000$ на карту 7892 4552 1124 0228');\n\t}\n\n\tconst initialValues = {\n\t\tname: '',\n\t\tnumber: '',\n\t};\n\n\tconst findContact = name => {\n\t\treturn addedContact.items?.find(contact => {\n\t\t\treturn contact.name.toLowerCase() === name.toLowerCase();\n\t\t});\n\t};\n\n\tconst handleFormSubmit = (values, { resetForm }) => {\n\t\tif (findContact(values.name)) {\n\t\t\tReport.failure(\n\t\t\t\t'This contact already existst',\n\t\t\t\t'Please make sure you are adding the new contact',\n\t\t\t\t'Ckeck again'\n\t\t\t);\n\t\t\tresetForm();\n\t\t\treturn;\n\t\t}\n\t\tconst newContact = {\n\t\t\tname: values.name.trim(),\n\t\t\tnumber: values.number.trim(),\n\t\t};\n\t\tdispatch(addContacts(newContact));\n\t\tresetForm();\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\t\t\tonSubmit={handleFormSubmit}\n\t\t\tvalidationSchema={schema}\n\t\t>\n\t\t\t<ContactsForm>\n\t\t\t\t<CommonHeading>Phone Book</CommonHeading>\n\t\t\t\t<ContactsFormLabel>\n\t\t\t\t\t<ContactsFormInput type=\"text\" name=\"name\" placeholder=\"Name\" />\n\t\t\t\t</ContactsFormLabel>\n\t\t\t\t<ErrorMsg name=\"name\" component=\"div\" />\n\t\t\t\t<ContactsFormLabel>\n\t\t\t\t\t<ContactsFormInput type=\"tel\" name=\"number\" placeholder=\"Number\" />\n\t\t\t\t</ContactsFormLabel>\n\t\t\t\t<ErrorMsg name=\"number\" component=\"div\" />\n\t\t\t\t<CommonBtn type=\"submit\" disabled={addedContact.isLoading}>\n\t\t\t\t\t{addedContact.isLoading ? 'Please Wait' : 'Add contact'}\n\t\t\t\t</CommonBtn>\n\t\t\t</ContactsForm>\n\t\t</Formik>\n\t);\n};\n","import styled from '@emotion/styled';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { FiEdit2 } from 'react-icons/fi';\nimport { CgClose } from 'react-icons/cg';\nimport { TiContacts } from 'react-icons/ti';\n\nexport const DeleteIcon = styled(RiDeleteBin6Line)`\n\twidth: 24px;\n\theight: 36px;\n\tfill: rgb(255, 255, 255);\n`;\nexport const EditIcon = styled(FiEdit2)`\n\twidth: 24px;\n\theight: 36px;\n\t/* fill: rgb(255, 255, 255); */\n`;\nexport const CloseIcon = styled(CgClose)`\n\twidth: 24px;\n\theight: 36px;\n\tfill: rgb(255, 255, 255);\n`;\n\nexport const ContactsIcon = styled(TiContacts)`\n\twidth: 16px;\n\theight: 16px;\n\tfill: rgb(255, 255, 255);\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: rgba(0, 0, 0, 0.8);\n\tz-index: 1200;\n`;\n","import {\n\tCommonBtn,\n\tCommonForm,\n\tCommonInput,\n\tCommonLabel,\n\tCommonWorkBtn,\n\tContainer,\n\tSection,\n} from 'components/App/App.styled';\nimport { CloseIcon, EditIcon } from 'components/Services/Icons/Icons.styled';\nimport { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'Redux/Contacts/ContactsOperations';\nimport { Overlay } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ user, toggleModal }) => {\n\tconst dispatch = useDispatch();\n\tconst [name, setName] = useState(user.name);\n\tconst [number, setNumber] = useState(user.number);\n\n\tuseEffect(() => {\n\t\tconst handleKeyDown = e => {\n\t\t\tif (e.code === 'Escape') {\n\t\t\t\tconsole.log('first');\n\t\t\t\ttoggleModal();\n\t\t\t}\n\t\t};\n\t\twindow.addEventListener('keydown', handleKeyDown);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, [toggleModal]);\n\n\tconst toggleOverlay = e => {\n\t\tif (e.target === e.currentTarget) {\n\t\t\ttoggleModal();\n\t\t}\n\t\treturn;\n\t};\n\n\tconst updateContact = e => {\n\t\te.preventDefault();\n\t\tif (!name && !number) {\n\t\t\talert('All fields must be filled');\n\t\t\treturn;\n\t\t}\n\t\tdispatch(editContact({ id: user.id, name, number }));\n\t\te.target.reset();\n\t};\n\treturn createPortal(\n\t\t<Overlay id=\"overlay\" onClick={toggleOverlay}>\n\t\t\t<Section>\n\t\t\t\t<Container>\n\t\t\t\t\t<CommonForm\n\t\t\t\t\t\tonSubmit={updateContact}\n\t\t\t\t\t\tstyle={{ backgroundColor: 'white' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CommonWorkBtn onClick={toggleModal} type=\"button\">\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</CommonWorkBtn>\n\t\t\t\t\t\t<CommonLabel>\n\t\t\t\t\t\t\t<CommonInput\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CommonLabel>\n\t\t\t\t\t\t<CommonLabel>\n\t\t\t\t\t\t\t<CommonInput\n\t\t\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\t\t\tplaceholder=\"tel\"\n\t\t\t\t\t\t\t\tname=\"tel\"\n\t\t\t\t\t\t\t\tonChange={e => setNumber(e.target.value)}\n\t\t\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CommonLabel>\n\t\t\t\t\t\t<CommonBtn type=\"submit\">\n\t\t\t\t\t\t\tEDIT <EditIcon />\n\t\t\t\t\t\t</CommonBtn>\n\t\t\t\t\t</CommonForm>\n\t\t\t\t</Container>\n\t\t\t</Section>\n\t\t</Overlay>,\n\n\t\tmodalRoot\n\t);\n};\n\nexport default Modal;\n","import { Container, Section } from 'components/App/App.styled';\n\nconst Spinner = () => {\n\treturn (\n\t\t<Section>\n\t\t\t<Container>\n\t\t\t\t<div className=\"ring\">\n\t\t\t\t\tLoading\n\t\t\t\t\t<span className=\"spann\"></span>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t</Section>\n\t);\n};\n\nexport default Spinner;\n","const getIsLoading = state => state.contacts.contacts.isLoading;\nconst getStates = state => state.contacts;\n\nexport const ContactSelectors = {\n\tgetIsLoading,\n\tgetStates,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListList = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 16px;\n\talign-items: center;\n\n\tlist-style-type: none;\n\tpadding: 0px 10px;\n\tmargin: 0px auto;\n\twidth: 700px;\n`;\n\nexport const ContactListItem = styled.li`\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0.9rem 2rem;\n\tfont-size: 0.8rem;\n\tborder-radius: 20px;\n\tborder-bottom: 2px solid #008997;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n`;\nexport const ContactsWrapper = styled.div`\n\t/* display: flex;\n\talign-items: center;\n\tflex-wrap: wrap;\n\tpadding: 0.9rem 2rem;\n\tfont-size: 0.8rem;\n\tborder-radius: 20px;\n\tborder-bottom: 2px solid #008997;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n\n\twidth: 300px; */\n`;\nexport const ContactListName = styled.p`\n\twidth: 35%;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tcolor: #131a35;\n`;\n\nexport const ContactListNumber = styled.p`\n\twidth: 35%;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tcolor: #131a35;\n`;\n\nexport const Message = styled.h2`\n\ttext-align: center;\n\tpadding: 2rem 4rem;\n\tborder-radius: 20px;\n\tbackground-color: rgba(255, 255, 255, 0.7);\n`;\n","import { CommonWorkBtn, Container, Section } from 'components/App/App.styled';\nimport Modal from 'components/Modal/Modal';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'Redux/Contacts/ContactsOperations';\nimport { ContactSelectors } from 'Redux/Contacts/ContactsSelectors';\nimport {\n\tContactListList,\n\tContactListItem,\n\tContactListName,\n\tContactListNumber,\n\tMessage,\n} from './ContactList.styled';\nimport { DeleteIcon, EditIcon } from 'components/Services/Icons/Icons.styled';\n\nexport const ContactList = () => {\n\tconst [showModal, setModal] = useState(false);\n\tconst [user, setUSer] = useState(null);\n\n\tconst toggleModal = user => {\n\t\tsetModal(!showModal);\n\t\tsetUSer(user);\n\t};\n\tconst { contacts, filter } = useSelector(ContactSelectors.getStates);\n\n\tconst dispatch = useDispatch();\n\n\tconst filteredContacts = filter\n\t\t? contacts.items.filter(contact =>\n\t\t\t\tcontact.name.toLowerCase().includes(filter.toLowerCase())\n\t\t  )\n\t\t: contacts.items;\n\treturn (\n\t\t<Section>\n\t\t\t<Container>\n\t\t\t\t{showModal && <Modal user={user} toggleModal={toggleModal} />}\n\t\t\t\t{contacts.isLoading ? (\n\t\t\t\t\t<Spinner />\n\t\t\t\t) : (\n\t\t\t\t\t<ContactListList>\n\t\t\t\t\t\t{filteredContacts?.length ? (\n\t\t\t\t\t\t\tfilteredContacts?.map(({ id, name, number }) => (\n\t\t\t\t\t\t\t\t<ContactListItem key={id} id={id}>\n\t\t\t\t\t\t\t\t\t<ContactListName>{name}</ContactListName>\n\t\t\t\t\t\t\t\t\t<ContactListNumber>{number}</ContactListNumber>\n\t\t\t\t\t\t\t\t\t<CommonWorkBtn\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => toggleModal({ id, name, number })}\n\t\t\t\t\t\t\t\t\t\tdisabled={contacts.isLoading}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t\t\t\t</CommonWorkBtn>\n\t\t\t\t\t\t\t\t\t<CommonWorkBtn\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch(deleteContacts(id))}\n\t\t\t\t\t\t\t\t\t\tdisabled={contacts.isLoading}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</CommonWorkBtn>\n\t\t\t\t\t\t\t\t</ContactListItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Message> You dont have contacts yet</Message>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ContactListList>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Section>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n\twidth: 500px;\n\tpadding: 64px 16px;\n\tbackground-color: rgba(255, 255, 255, 0.5);\n\tmargin: 0px auto;\n\tborder-radius: 20px;\n`;\n","import {\n\tCommonHeading,\n\tCommonInput,\n\tCommonLabel,\n\tSection,\n} from 'components/App/App.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'Redux/Contacts/ContactsSlice';\nimport { FilterWrapper } from './Filter.styled';\nexport const Filter = () => {\n\tconst dispatch = useDispatch();\n\tconst contactToFind = useSelector(state => state.filter);\n\tconst filter = name => dispatch(filterContacts(name));\n\treturn (\n\t\t<Section>\n\t\t\t<FilterWrapper>\n\t\t\t\t<CommonHeading>Contacts</CommonHeading>\n\t\t\t\t<CommonLabel>\n\t\t\t\t\tFind contacts by Name\n\t\t\t\t\t<CommonInput\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={contactToFind}\n\t\t\t\t\t\tonChange={e => filter(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Enter the Name\"\n\t\t\t\t\t/>\n\t\t\t\t</CommonLabel>\n\t\t\t</FilterWrapper>\n\t\t</Section>\n\t);\n};\n","import { Container, Section } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'Redux/Contacts/ContactsOperations';\nimport { ContactSelectors } from 'Redux/Contacts/ContactsSelectors';\n\nconst ContactactsPage = () => {\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdispatch(getContacts());\n\t}, [dispatch]);\n\tconst isLoading = useSelector(ContactSelectors.getIsLoading);\n\treturn (\n\t\t<>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\t<Section>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<ContactForm />\n\t\t\t\t\t\t<Filter />\n\t\t\t\t\t\t<ContactList />\n\t\t\t\t\t</Container>\n\t\t\t\t</Section>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ContactactsPage;\n"],"names":["ContactsForm","styled","Form","ContactsFormInput","Field","ErrorMsg","ErrorMessage","ContactsFormLabel","schema","yup","shape","name","min","max","required","number","ContactForm","addedContact","useSelector","state","contacts","dispatch","useDispatch","error","alert","initialValues","onSubmit","values","resetForm","items","find","contact","toLowerCase","findContact","Report","newContact","trim","addContacts","validationSchema","type","placeholder","component","disabled","isLoading","DeleteIcon","RiDeleteBin6Line","EditIcon","FiEdit2","CloseIcon","CgClose","TiContacts","Overlay","modalRoot","document","querySelector","user","toggleModal","useState","setName","setNumber","useEffect","handleKeyDown","e","code","console","log","window","addEventListener","removeEventListener","createPortal","id","onClick","target","currentTarget","preventDefault","editContact","reset","style","backgroundColor","onChange","value","className","ContactSelectors","ContactListList","ContactListItem","ContactListName","ContactListNumber","Message","ContactList","showModal","setModal","setUSer","filter","filteredContacts","includes","length","map","deleteContacts","FilterWrapper","Filter","contactToFind","filterContacts","getContacts"],"sourceRoot":""}